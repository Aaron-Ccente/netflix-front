{"ast":null,"code":"export function validation(values) {\n  let error = {};\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const password_pattern = /^(?=.*\\d)(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\n  if (!values.name || values.name.trim() === \"\") {\n    error.name = \"Name should not be empty\";\n  } else {\n    error.name = \"\";\n  }\n  if (!values.email || values.email.trim() === \"\") {\n    error.email = \"Email should not be empty\";\n  } else if (!email_pattern.test(values.email)) {\n    error.email = \"Email format is invalid\";\n  } else {\n    error.email = \"\";\n  }\n  if (!values.password || values.password.trim() === \"\") {\n    error.password = \"Password should not be empty\";\n  } else if (!password_pattern.test(values.password)) {\n    error.password = \"Password must contain at least one uppercase letter, one number, and be at least 8 characters\";\n  } else {\n    error.password = \"\";\n  }\n  return error;\n}","map":{"version":3,"names":["validation","values","error","email_pattern","password_pattern","name","trim","email","test","password"],"sources":["C:/Users/Aaron/Documents/VSTUDIO/PELICULAS/frontend/src/SignupValidation.js"],"sourcesContent":["export function validation(values) {\r\n  let error = {};\r\n  const email_pattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  const password_pattern = /^(?=.*\\d)(?=.*[A-Z])[a-zA-Z0-9]{8,}$/;\r\n\r\n  if (!values.name || values.name.trim() === \"\") {\r\n    error.name = \"Name should not be empty\";\r\n  } else {\r\n    error.name = \"\";\r\n  }\r\n\r\n  if (!values.email || values.email.trim() === \"\") {\r\n    error.email = \"Email should not be empty\";\r\n  } else if (!email_pattern.test(values.email)) {\r\n    error.email = \"Email format is invalid\";\r\n  } else {\r\n    error.email = \"\";\r\n  }\r\n\r\n  if (!values.password || values.password.trim() === \"\") {\r\n    error.password = \"Password should not be empty\";\r\n  } else if (!password_pattern.test(values.password)) {\r\n    error.password = \"Password must contain at least one uppercase letter, one number, and be at least 8 characters\";\r\n  } else {\r\n    error.password = \"\";\r\n  }\r\n\r\n  return error;\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,MAAM,EAAE;EACjC,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,MAAMC,aAAa,GAAG,4BAA4B;EAClD,MAAMC,gBAAgB,GAAG,sCAAsC;EAE/D,IAAI,CAACH,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC7CJ,KAAK,CAACG,IAAI,GAAG,0BAA0B;EACzC,CAAC,MAAM;IACLH,KAAK,CAACG,IAAI,GAAG,EAAE;EACjB;EAEA,IAAI,CAACJ,MAAM,CAACM,KAAK,IAAIN,MAAM,CAACM,KAAK,CAACD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/CJ,KAAK,CAACK,KAAK,GAAG,2BAA2B;EAC3C,CAAC,MAAM,IAAI,CAACJ,aAAa,CAACK,IAAI,CAACP,MAAM,CAACM,KAAK,CAAC,EAAE;IAC5CL,KAAK,CAACK,KAAK,GAAG,yBAAyB;EACzC,CAAC,MAAM;IACLL,KAAK,CAACK,KAAK,GAAG,EAAE;EAClB;EAEA,IAAI,CAACN,MAAM,CAACQ,QAAQ,IAAIR,MAAM,CAACQ,QAAQ,CAACH,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IACrDJ,KAAK,CAACO,QAAQ,GAAG,8BAA8B;EACjD,CAAC,MAAM,IAAI,CAACL,gBAAgB,CAACI,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,EAAE;IAClDP,KAAK,CAACO,QAAQ,GAAG,+FAA+F;EAClH,CAAC,MAAM;IACLP,KAAK,CAACO,QAAQ,GAAG,EAAE;EACrB;EAEA,OAAOP,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}